@model inmobiliariaBD.Models.Contrato

@{
    ViewData["Title"] = Model.Id == 0 ? "Nuevo Contrato" : "Editar Contrato";
}

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-info">@TempData["Mensaje"]</div>
}

<h2>@(Model.Id == 0 ? "Nuevo Contrato" : "Editar Contrato")</h2>

<form asp-action="CreateOrEdit" method="post">
    <input type="hidden" asp-for="Id" />
    @* Campo oculto: el estado siempre se inicializa como "Vigente" al crear el contrato.*@
    <input type="hidden" asp-for="Estado" value="Vigente" />


    <div class="row">
        <div class="form-group col-md-6 mb-3">
            <label asp-for="InquilinoId">Inquilino</label>
            <select asp-for="InquilinoId" asp-items="ViewBag.Inquilinos" class="form-select">
                <option value="">-- Seleccionar Inquilino --</option>
            </select>
            <span asp-validation-for="InquilinoId" class="text-danger"></span>
        </div>

        <div class="form-group col-md-6 mb-3">
            <label asp-for="InmuebleId">Inmueble</label>
            <select asp-for="InmuebleId" asp-items="ViewBag.Inmuebles" class="form-select">
                <option value="">-- Seleccionar Inmueble --</option>
            </select>
            <span asp-validation-for="InmuebleId" class="text-danger"></span>
        </div>

        <div class="form-group col-md-4 mb-3">
            <label asp-for="Monto"></label>
            <div class="input-group">
                <span class="input-group-text">$</span>
                <input asp-for="Monto" class="form-control no-spinner" />
            </div>
            <span asp-validation-for="Monto" class="text-danger"></span>
        </div>

        <div class="form-group col-md-4 mb-3">
            <label asp-for="Desde">Desde</label>
            <input asp-for="Desde" type="date" class="form-control" />
            <span asp-validation-for="Desde" class="text-danger"></span>
        </div>

        <div class="form-group col-md-4 mb-3">
            <label asp-for="Hasta">Hasta</label>
            <input asp-for="Hasta" type="date" class="form-control" />
            <span asp-validation-for="Hasta" class="text-danger"></span>
        </div>


@if (Model.Id != 0)
{
    <div class="form-group col-md-4">
        <div class="d-flex align-items-center gap-2 mt-4">
            <label class="mb-0">Estado:</label>
            @if (Model.Estado == "Vigente")
            {
                <span class="badge bg-success px-3 py-2">Vigente</span>
            }
            else if (Model.Estado == "Finalizado")
            {
                <span class="badge bg-secondary px-3 py-2">Finalizado</span>
            }
            else if (Model.Estado == "Rescindido")
            {
                <span class="badge bg-danger px-3 py-2">Rescindido</span>
            }
            else
            {
                <span class="badge bg-dark px-3 py-2">Estado desconocido</span>
            }
        </div>
    </div>
}

    </div>

    <div class="d-flex gap-3 justify-content-center my-4">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</form>

<div class="d-flex gap-3 justify-content-center my-4">
@if (Model.Id != 0)
{
    @foreach (var estado in new[] { "Vigente", "Finalizado", "Rescindido" })
{
    if (estado != Model.Estado)
    {
        string textoBoton = estado switch
        {
            "Vigente" => "Reactivar",
            "Finalizado" => "Finalizar",
            "Rescindido" => "Rescindir",
        };

        <form asp-action="ModificarEstado" asp-controller="Contrato" method="post" class="d-inline">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="nuevoEstado" value="@estado" />
            <button type="submit"
                    class="btn btn-sm @(estado == "Vigente" ? "btn-success" : estado == "Finalizado" ? "btn-secondary" : "btn-danger")">
                @textoBoton
            </button>
        </form>
    }
}

}
    <a asp-action="Index" class="btn btn-outline-primary btn-sm">Volver al Listado</a>
</div>

<div class="validaciones-info mt-4 mb-0">
    <h5>üîç Validaciones y/o implementaciones:</h5>
    <ul>
        <li>Validar que el inmueble no tenga contrato vigente ‚ùå</li>
        <li>Controlar que la fecha Hasta sea posterior a Desde ‚úÖ</li>
        <li>Evitar monto cero o negativo ‚úÖ</li>
        <li>Mostrar nombre completo del inquilino en el select ‚úÖ</li>
        <li>Llenar los select de inquilino y inmueble dinamicamente y trayendo pocos datos ‚ùå</li>
        <li>Evitar spinner en campos num√©ricos ‚úÖ</li>
        <li>que el campo desde siempre este con el dia actual desde el inicio ‚ùå </li>
        
    </ul>
</div>


@* Incluye los scripts para validar campos en el navegador: Required, Email, Range, etc. 
   Sirve para mostrar errores sin tener que enviar el formulario. *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}