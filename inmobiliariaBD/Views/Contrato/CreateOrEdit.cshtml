@model inmobiliariaBD.Models.Contrato

@{
    ViewData["Title"] = Model.Id == 0 ? "Nuevo Contrato" : "Editar Contrato";
}


@if (TempData["Mensaje"] != null)
{
    <div class="alert text-white bg-opacity-75 border-start border-4 border-info shadow-sm px-4 py-3 rounded-3"
        style="background-color: #1e2a38;">
        <i class="fa-solid fa-circle-info me-2 text-info"></i>
        <span class="fw-semibold text-info">Info:</span> @TempData["Mensaje"]
    </div>
}


<h2 class="text-light mb-4">
    @(ViewBag.EsRenovacion != null && (bool)ViewBag.EsRenovacion
        ? "üîÅ Renovar Contrato"
        : Model.Id == 0 ? "üÜï Nuevo Contrato" : "‚úèÔ∏è Editar Contrato")
</h2>


<form asp-action="CreateOrEdit" method="post" class="bg-dark text-white p-4 rounded border border-secondary">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="Estado" value="Vigente" />
    <input type="hidden" name="esRenovacion" value="@((ViewBag.EsRenovacion ?? false).ToString().ToLower())" />


    <div class="row g-3">
        <div class="col-md-5">
            <label class="form-label text-light">Inquilino</label>
            <select id="InquilinoId" name="InquilinoId" class="form-select w-100">
                @if (Model?.InquilinoId > 0)
                {
                    <option value="@Model.InquilinoId" selected>
                        @Model.Inquilino?.Persona.Nombre @Model.Inquilino?.Persona.Apellido - DNI @Model.Inquilino?.Dni
                    </option>
                }
                else
                {
                    <option></option>
                }
            </select>
            <span asp-validation-for="InquilinoId" class="text-danger small"></span>
        </div>

        <div class="col-md-7">
            <label class="form-label text-light">Inmueble</label>
            <select id="InmuebleId" name="InmuebleId" class="form-select w-100">
                @if (Model?.InmuebleId > 0 && Model.Inmueble != null)
                {
                    <option value="@Model.InmuebleId" selected>
                        @Model.Inmueble.Direccion - @Model.Inmueble.Localidad (@Model.Inmueble.TipoInmueble?.Tipo -
                        @Model.Inmueble.Uso) .............. $@Model.Inmueble.Precio
                    </option>
                }
                else
                {
                    <option value="">‚¨áÔ∏è Busc√° por fecha primero</option>
                }
            </select>
            <span asp-validation-for="InmuebleId" class="text-danger small"></span>
        </div>

        <div class="col-md-12">
            <label class="form-label text-light">üìÖ Fechas del contrato</label>
            <div class="row g-3">
                <div class="col-md-6">
                    <input asp-for="Desde" type="date" id="Desde" class="form-control bg-dark text-white border-light"
                        placeholder="Desde" />
                    <span asp-validation-for="Desde" class="text-danger small"></span>
                </div>
                <div class="col-md-6">
                    <input asp-for="Hasta" type="date" id="Hasta" class="form-control bg-dark text-white border-light"
                        placeholder="Hasta" />
                    <span asp-validation-for="Hasta" class="text-danger small"></span>
                </div>
            </div>
            <button type="button" id="btnBuscarDisponibles" class="btn btn-outline-info mt-3">üîç Buscar
                disponibles</button>
        </div>

        <div class="col-md-4">
            <label asp-for="Monto" class="form-label"></label>
            <div class="input-group">
                <span class="input-group-text bg-dark text-white border-light">$</span>
                <input asp-for="Monto" class="form-control bg-dark text-white border-light no-spinner" />
            </div>
            <span asp-validation-for="Monto" class="text-danger small"></span>
        </div>

        @if (Model.Id != 0)
        {
            <div class="col-md-4 d-flex align-items-center mt-4">
                <label class="me-2">Estado:</label>
                <span
                    class="badge @(Model.Estado == "Vigente" ? "bg-success" : Model.Estado == "Finalizado" ? "bg-secondary" : "bg-danger") px-3 py-2">
                    @Model.Estado
                </span>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-4">
        <button type="submit" class="btn btn-primary px-4">üíæ Guardar</button>
    </div>
</form>

<div class="d-flex justify-content-center gap-3 mt-4">
    @if (Model.Id != 0)
    {
        @foreach (var estado in new[] { "Vigente", "Rescindido" })
        {
            if (estado != Model.Estado)
            {
                string textoBoton = estado switch
                {
                    "Vigente" => "Reactivar",

                    "Rescindido" => "Rescindir",
                };

                <form asp-action="ModificarEstado" asp-controller="Contrato" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="nuevoEstado" value="@estado" />
                    <button type="submit"
                        class="btn btn-sm @(estado == "Vigente" ? "btn-outline-success" : estado == "Finalizado" ? "btn-outline-secondary" : "btn-outline-danger")">
                        @textoBoton
                    </button>
                </form>
            }
        }
    }
    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
        <i class="fa-solid fa-arrow-left"></i> Volver al listado
    </a>
</div>

<div class="validaciones-info mt-5 text-light border-top pt-3">
    <h5>üîç Validaciones y/o implementaciones:</h5>
    <ul class="small">
        <li>‚úÖ Validar que el inmueble no tenga contrato vigente</li>
        <li>‚úÖ Controlar que la fecha Hasta sea posterior a Desde</li>
        <li>‚úÖ Evitar monto cero o negativo</li>
        <li>‚úÖ Llenar los select de inquilino y inmueble din√°micamente y trayendo pocos datos</li>
        <li>‚ùå Inquilinos y Inmuebles activos solamente</li>
        <li>‚úÖ Evitar spinner en campos num√©ricos</li>
        <li>‚úÖ Que el campo Desde siempre est√© con el d√≠a actual desde el inicio</li>
    </ul>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {

            $('#InquilinoId').select2({
                theme: 'bootstrap-5',
                language: 'es',
                placeholder: "Buscar inquilino...",
                minimumInputLength: 3,
                ajax: {
                    delay: 250,
                    dataType: 'json',
                    cache: true,
                    url: function (params) {
                        let q = params.term ? encodeURIComponent(params.term) : "";
                        return `/Inquilino/Buscar/${q}`;
                    },
                    processResults: function (res) {
                        return {
                            results: res.datos.map(i => ({
                                id: i.id,
                                text: `${i.persona.nombre} ${i.persona.apellido} - DNI ${i.dni}`
                            }))
                        };
                    }
                }
            });

            // Inmueble: inicializa vacio
            $('#InmuebleId').select2({
                theme: 'bootstrap-5',
                language: 'es',
                placeholder: "‚¨áÔ∏è Busc√° por fecha primero",
                minimumResultsForSearch: Infinity // oculto el buscador hasta que haya opciones
            });

            // Buscar disponibles por fechas
            $('#btnBuscarDisponibles').on('click', function () {
                const desde = $('#Desde').val();
                const hasta = $('#Hasta').val();

                if (!desde || !hasta || desde >= hasta) {
                    alert("‚ö†Ô∏è Fechas inv√°lidas. Verific√° que 'Hasta' sea posterior a 'Desde'.");
                    return;
                }

                $.ajax({
                    url: `/Inmueble/DisponiblesEntreFechas`,
                    method: 'GET',
                    data: {
                        desde: new Date(desde).toISOString(),
                        hasta: new Date(hasta).toISOString()
                    },
                    success: function (res) {
                        if (!res || !res.datos || res.datos.length === 0) {
                            alert("‚ÑπÔ∏è No se encontraron inmuebles disponibles en ese rango.");
                            return;
                        }

                        const $select = $('#InmuebleId');
                        $select.select2('destroy');
                        $select.empty().append('<option></option>');

                        res.datos.forEach(i => {
                            const texto = `${i.direccion} - ${i.localidad} (${i.tipoInmueble?.tipo} - ${i.uso}) | $${i.precio}`;
                            const option = new Option(texto, i.id, false, false);
                            $select.append(option);
                        });

                        $select.select2({
                            theme: 'bootstrap-5',
                            language: 'es',
                            placeholder: "Seleccionar inmueble disponible...",
                            minimumInputLength: 0
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("‚ùå Error AJAX:", status, error);
                        alert("‚ùå Error al buscar inmuebles disponibles.");
                    }
                });
            });
        });

    </script>
}